// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// matern_isotropic
NumericMatrix matern_isotropic(NumericMatrix locs, NumericVector covparms);
RcppExport SEXP _GpGp_matern_isotropic(SEXP locsSEXP, SEXP covparmsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_isotropic(locs, covparms));
    return rcpp_result_gen;
END_RCPP
}
// matern_sphere
NumericMatrix matern_sphere(NumericMatrix lonlat, NumericVector covparms);
RcppExport SEXP _GpGp_matern_sphere(SEXP lonlatSEXP, SEXP covparmsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type lonlat(lonlatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_sphere(lonlat, covparms));
    return rcpp_result_gen;
END_RCPP
}
// matern_sphere_time
NumericMatrix matern_sphere_time(NumericMatrix lonlattime, NumericVector covparms);
RcppExport SEXP _GpGp_matern_sphere_time(SEXP lonlattimeSEXP, SEXP covparmsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type lonlattime(lonlattimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_sphere_time(lonlattime, covparms));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_loglik
NumericVector vecchia_loglik(NumericVector covparms, StringVector covfun_name, NumericVector y, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_loglik(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_loglik(covparms, covfun_name, y, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_Linv
NumericMatrix vecchia_Linv(NumericVector covparms, StringVector covfun_name, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_Linv(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_Linv(covparms, covfun_name, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// Linv_mult
NumericVector Linv_mult(NumericMatrix Linv_entries, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_Linv_mult(SEXP Linv_entriesSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv_entries(Linv_entriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(Linv_mult(Linv_entries, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// L_mult
NumericVector L_mult(NumericMatrix Linv_entries, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_L_mult(SEXP Linv_entriesSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv_entries(Linv_entriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(L_mult(Linv_entries, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GpGp_matern_isotropic", (DL_FUNC) &_GpGp_matern_isotropic, 2},
    {"_GpGp_matern_sphere", (DL_FUNC) &_GpGp_matern_sphere, 2},
    {"_GpGp_matern_sphere_time", (DL_FUNC) &_GpGp_matern_sphere_time, 2},
    {"_GpGp_vecchia_loglik", (DL_FUNC) &_GpGp_vecchia_loglik, 5},
    {"_GpGp_vecchia_Linv", (DL_FUNC) &_GpGp_vecchia_Linv, 4},
    {"_GpGp_Linv_mult", (DL_FUNC) &_GpGp_Linv_mult, 3},
    {"_GpGp_L_mult", (DL_FUNC) &_GpGp_L_mult, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_GpGp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
